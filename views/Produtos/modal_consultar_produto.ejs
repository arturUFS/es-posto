<div id="modalConsultarProduto" class="modal">
  <div class="modal-content">
    <div class="modal-header">
      <button
        class="back-button"
        onclick="fecharModal('modalConsultarProduto')"
      >
        <i class="arrow-left"
          ><img src="/assets/Icon (1).png" alt="voltar"
        /></i>
      </button>
      <h2>Consultar Produto</h2>
      <button class="home-button" onclick="window.location.href='/home'">
        <i class="home-icon"
          ><img src="/assets/home-lg-alt 1.png" alt="home"
        /></i>
      </button>
    </div>

    <div class="modal-body">
      <!-- Tela de Consulta -->
      <div id="telaConsulta" class="center-content">
        <form id="consultaForm">
          <div class="form-group">
            <label for="produto2">Produto:</label>
            <select id="produto2" required>
              <option value="" disabled selected>Carregando produtos...</option>
            </select>
          </div>
          <div class="form-btn-cons" style="margin-top: 20px">
            <button
              type="button"
              class="consultar-btn"
              onclick="consultarFuncionario()"
            >
              Consultar
            </button>
          </div>
        </form>
      </div>
      <!-- Tela de Resultado -->
      <div id="resultadoConsulta">
        <form id="formConsultarProduto">
          <div class="form-row">
            <div class="form-group">
              <label for="nomeProduto2">Nome:</label>
              <input type="text" id="nomeProduto2" readonly />
            </div>
            <div class="form-group">
              <label for="fornecedor2">Fornecedor:</label>
              <input type="text" id="fornecedor2" readonly />
            </div>
            <div class="form-actions">
              <button type="button" class="icon-button edit-button">
                <i class="edit-icon"
                  ><img src="/assets/Vector (3).png" alt="editar"
                /></i>
              </button>
              <button type="button" class="icon-button delete-button">
                <i class="delete-icon"
                  ><img src="/assets/Vector (4).png" alt="excluir"
                /></i>
              </button>
            </div>
          </div>

          <div class="form-row">
            <div class="form-group">
              <label for="valorProduto2">Valor:</label>
              <input type="text" id="valorProduto2" readonly />
            </div>
            <div class="form-group">
              <label for="quantidadeDisponivel2">Quantidade Disponível:</label>
              <input type="text" id="quantidadeDisponivel2" readonly />
            </div>
          </div>

          <div class="form-row">
            <div class="form-group" style="flex-basis: 100%">
              <label for="descricaoProduto">Descrição:</label>
              <textarea
                id="descricaoProduto"
                rows="4"
                readonly
                style="resize: none"
              ></textarea>
            </div>
          </div>
          <div id="botoesEdicao" style="display: none">
            <div class="form-btn-res">
              <button
                type="button"
                class="save-btn"
                onclick="salvarAlteracoes()"
              >
                Salvar
              </button>
              <button
                type="button"
                class="cancel-btn"
                onclick="cancelarEdicao()"
              >
                Cancelar
              </button>
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>
<script>
  // Formatação para o campo de valor
  document.getElementById("valorTotal").addEventListener("input", function (e) {
    let value = e.target.value.replace(/\D/g, "");
    value = (parseInt(value || "0") / 100).toFixed(2).replace(".", ",");
    e.target.value = "R$ " + value;
  });

  // Função para carregar os Produtos e preencher o select
  async function carregarProdutos() {
    try {
      const response = await fetch("/produto/listar");
      if (!response.ok) {
        throw new Error("Erro ao carregar produtos.");
      }

      const produtos = await response.json();
      const selectProduto = document.getElementById("produto2");

      // Limpa as opções existentes (exceto a padrão)
      selectProduto.innerHTML =
        '<option value="" disabled selected>Selecione o produto</option>';

      // Adiciona os produtos ao select
      produtos.forEach((produto) => {
        const option = document.createElement("option");
        option.value = produto.idproduto; // O valor será o idproduto
        option.textContent = produto.nome; // O texto será o nome do produto
        selectProduto.appendChild(option);
      });
    } catch (error) {
      console.error(error);
    }
  }

  // Chamar a função ao abrir o modal
  document.addEventListener("DOMContentLoaded", carregarProdutos);

  // Função para habilitar a edição dos campos
  function habilitarEdicao() {
    const campos = document.querySelectorAll(
      "#resultadoConsulta input:not(#cpf-res)"
    );
    campos.forEach((campo) => {
      campo.readOnly = false;
    });

    document.getElementById("botoesEdicao").style.display = "block";
    document.getElementById("lapis").style.display = "none";
  }

  // Função para cancelar edição
  function cancelarEdicao() {
    const campos = document.querySelectorAll("#resultadoConsulta input");
    campos.forEach((campo) => {
      campo.readOnly = true;
    });

    document.getElementById("botoesEdicao").style.display = "none";
    document.getElementById("lapis").style.display = "block";
  }

  // Função para fechar o modal
  function fecharModal(idModal) {
    document.getElementById(idModal).style.display = "none";
  }
</script>
