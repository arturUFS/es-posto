<div id="modalConsultarServico" class="modal">
  <div class="modal-content">
    <div class="modal-header">
      <button class="back-button" onclick="fecharOuVoltar()">
        <i class="arrow-left">
          <img src="/assets/Icon (1).png" alt="voltar" />
        </i>
      </button>
      <h2>Consultar Serviços</h2>
      <button class="home-button" onclick="window.location.href='/home'">
        <i class="home-icon">
          <img src="/assets/home-lg-alt 1.png" alt="home" />
        </i>
      </button>
    </div>

    <div class="modal-body">
      <!-- Tela de Consulta -->
      <div id="telaConsultaServico" class="center-content">
        <form id="consultaServicoForm">
          <div class="form-group">
            <label for="servico2">Serviço:</label>
            <select id="servico2" required>
              <option value="" disabled selected>Carregando serviços...</option>
            </select>
          </div>
          <div class="form-btn-cons" style="margin-top: 20px">
            <button
              type="button"
              class="consultar-btn"
              onclick="consultarServico()"
            >
              Consultar
            </button>
          </div>
        </form>
      </div>
      <!-- Tela de Resultado -->
      <div id="resultadoConsultaServico" style="display: none">
        <form id="formConsultarServico">
          <div class="form-row">
            <div class="form-group">
              <label for="tiposervico2">Tipo de Serviço:</label>
              <input type="text" id="tiposervico2" readonly />
            </div>
            <div class="form-group">
              <label for="valorServico2">Valor:</label>
              <input type="text" id="valorServico2" readonly />
            </div>
            <div class="action-buttons">
              <button
                type="button"
                class="edit-btn"
                onclick="habilitarEdicaoServico()"
              >
                <i class="edit-icon">
                  <img
                    id="lapisServico"
                    src="/assets/Vector (3).png"
                    alt="editar"
                  />
                </i>
              </button>
              <button class="delete-btn" onclick="confirmarExclusaoServico()">
                <i class="delete-icon">
                  <img src="/assets/Vector (4).png" alt="excluir" />
                </i>
              </button>
            </div>
          </div>
          <div class="form-row">
            <div class="form-group">
              <label for="duracaoMedia2">Duração Média (min):</label>
              <input type="text" id="duracaoMedia2" readonly />
            </div>
            <div class="form-group">
              <label for="localServico2">Local:</label>
              <input type="text" id="localServico2" readonly />
            </div>
          </div>
          <div class="form-group">
            <label for="descricaoServico2">Descrição:</label>
            <textarea
              id="descricaoServico2"
              rows="4"
              readonly
              style="resize: none"
            ></textarea>
          </div>
          <div id="botoesEdicaoServico" style="display: none">
            <div class="form-btn-res">
              <button
                type="button"
                class="save-btn"
                onclick="salvarAlteracoesServico()"
              >
                Salvar
              </button>
              <button
                type="button"
                class="cancel-btn"
                onclick="cancelarEdicaoServico()"
              >
                Cancelar
              </button>
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  // Função para carregar os Serviços e preencher o select
  async function carregarServicos() {
    try {
      const response = await fetch("/servico/listar");
      if (!response.ok) {
        throw new Error("Erro ao carregar serviços.");
      }

      const servicos = await response.json();
      const selectServico = document.getElementById("servico2");

      selectServico.innerHTML =
        '<option value="" disabled selected>Selecione o serviço</option>';

      servicos.forEach((servico) => {
        const option = document.createElement("option");
        option.value = servico.idservico;
        option.textContent = servico.tiposervico;
        selectServico.appendChild(option);
      });
    } catch (error) {
      console.error(error);
    }
  }

  // Chamar a função ao abrir o modal
  document.addEventListener("DOMContentLoaded", carregarServicos);

  // Função para consultar serviço
  async function consultarServico() {
    const idServico = document.getElementById("servico2").value;

    if (!idServico) {
      alert("Por favor, selecione um serviço.");
      return;
    }

    try {
      const response = await fetch(`/servico/consultar/${idServico}`);
      if (!response.ok) {
        throw new Error("Serviço não encontrado.");
      }

      const servico = await response.json();

      // Preencher os campos com os dados do serviço
      document.getElementById("tiposervico2").value = servico.tiposervico;
      const valor = servico.valor ? parseFloat(servico.valor) : 0;
      document.getElementById("valorServico2").value = `R$ ${valor
        .toFixed(2)
        .replace(".", ",")}`;

      // Preenchendo a duração e o local
      document.getElementById("duracaoMedia2").value = servico.duracao;

      // Ajuste no preenchimento do local
      document.getElementById("localServico2").value = servico.local;

      // Preenchendo a descrição
      document.getElementById("descricaoServico2").textContent =
        servico.descricao || "";

      // Ocultar tela de consulta e exibir a tela de resultado
      document.getElementById("telaConsultaServico").style.display = "none";
      document.getElementById("resultadoConsultaServico").style.display =
        "block";
    } catch (error) {
      alert(error.message);
    }
  }

  // Função para salvar as alterações
  async function salvarAlteracoesServico() {
    const idServico = document.getElementById("servico2").value;
    const tiposervico = document.getElementById("tiposervico2").value;
    const valor = document
      .getElementById("valorServico2")
      .value.replace("R$ ", "")
      .replace(",", ".");
    const local = document.getElementById("localServico2").value;
    const duracao = document.getElementById("duracaoMedia2").value;
    const descricao = document.getElementById("descricaoServico2").value;

    if (!idServico || !tiposervico || !valor || !local || !duracao) {
      alert("Preencha todos os campos!");
      return;
    }

    const dadosAtualizados = {
      tiposervico,
      valor: parseFloat(valor),
      local,
      duracao,
      descricao,
    };

    try {
      const response = await fetch(`/servico/atualizar/${idServico}`, {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(dadosAtualizados),
      });

      if (!response.ok) throw new Error("Erro ao atualizar o serviço.");

      alert("Serviço atualizado com sucesso!");
      fecharOuVoltar();
    } catch (error) {
      alert(error.message);
    }
  }

  // Função para habilitar edição dos campos
  function habilitarEdicaoServico() {
    const campos = document.querySelectorAll(
      "#resultadoConsultaServico input, #resultadoConsultaServico textarea"
    );
    campos.forEach((campo) => {
      campo.readOnly = false;
    });

    document.getElementById("botoesEdicaoServico").style.display = "block";
    document.getElementById("lapisServico").style.visibility = "hidden";
  }

  // Função para cancelar edição
  function cancelarEdicaoServico() {
    const campos = document.querySelectorAll(
      "#resultadoConsultaServico input, #resultadoConsultaServico textarea"
    );
    campos.forEach((campo) => {
      campo.readOnly = true;
    });

    document.getElementById("botoesEdicaoServico").style.display = "none";
    document.getElementById("lapisServico").style.visibility = "visible";
  }

  function confirmarExclusaoServico() {
    const idservico = document.getElementById("servico2").value; // Obtém o id do servico

    if (!idservico) {
      alert("Nenhum servico selecionado para exclusão.");
      return;
    }

    const confirmacao = confirm("Tem certeza que deseja excluir este servico?");
    if (confirmacao) {
      excluirServico(idservico);
    }
  }

  // Exclui um servico enviando uma requisição DELETE para o backend.
  function excluirServico(idservico) {
    fetch(`/servico/excluir/${idservico}`, {
      method: "DELETE",
    })
      .then((response) => {
        if (!response.ok) {
          throw new Error("Erro ao excluir servico.");
        }
        return response.json();
      })
      .then((data) => {
        alert(data.message); // Exibe mensagem de sucesso
        fecharOuVoltar(); // Retorna para a tela de consulta
      })
      .catch((error) => {
        alert(error.message);
      });
  }
  // Função para fechar ou voltar para início do modal
  function fecharOuVoltar() {
    const resultado = document.getElementById("resultadoConsultaServico");
    const telaConsulta = document.getElementById("telaConsultaServico");
    const formConsulta = document.getElementById("consultaServicoForm");
    const formResultado = document.getElementById("formConsultarServico");

    if (window.getComputedStyle(resultado).display !== "none") {
      resultado.style.display = "none";
      telaConsulta.style.display = "flex";
      cancelarEdicaoServico();
      formConsulta.reset();
      formResultado.reset();
      document.getElementById("servico2").value = "";
    } else {
      fecharModal("modalConsultarServico");
      formConsulta.reset();
      formResultado.reset();
      document.getElementById("servico2").value = "";
    }
  }

  // Função para fechar o modal
  function fecharModal(idModal) {
    document.getElementById(idModal).style.display = "none";
  }
</script>
