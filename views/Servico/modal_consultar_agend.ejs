<div id="modalConsultarAgendamento" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <button class="back-button" onclick="fecharOuVoltarAgendamento()">
          <i class="arrow-left"><img src="/assets/Icon (1).png" alt="voltar"/></i>
        </button>
        <h2>Consultar Agendamento</h2>
        <button class="home-button" onclick="window.location.href='/home'">
          <i class="home-icon"><img src="/assets/home-lg-alt 1.png" alt="home"/></i>
        </button>
      </div>
  
      <div class="modal-body">
        <!-- Tela de Consulta -->
        <div id="telaConsultaAgendamento" class="center-content">
          <form id="consultaFormAgendamento">
            <div class="form-group">
              <label for="agendamentoSelect">Agendamento:</label>
              <select id="agendamentoSelect" required>
                <option value="" disabled selected>Selecione o agendamento</option>
              </select>
            </div>
            <div class="form-btn-cons" style="margin-top: 20px">
              <button type="button" class="consultar-btn" onclick="consultarAgendamento()">
                Consultar
              </button>
            </div>
          </form>
        </div>
        
        <!-- Tela de Resultado -->
        <div id="resultadoConsultaAgendamento" style="display: none;">
          <form id="formConsultarAgendamento">
            <div class="section-divider">Dados do Serviço</div>

    <div class="modal-body">
      <form id="formAgendarServico">
        <div class="form-row">
          <div class="form-group">
            <label for="dataServico">Data do serviço:</label>
            <input
              type="date"
              id="dataServico"
              placeholder="DD/MM/AAAA"
              required
            />
          </div>
          <div class="form-group">
            <label for="horaServico">Hora:</label>
            <input type="time" id="horaServico" placeholder="HH:MM" required />
          </div>
        </div>

        <div class="form-row">
          <div class="form-group">
            <label for="valor">Valor Total:</label>
            <input type="text" id="valor" placeholder="R$ 00,00" required />
          </div>
          <div class="form-group">
            <label for="servico">Serviço:</label>
            <select id="servico" required>
              <option value="" selected disabled>Selecione o serviço</option>
            </select>
          </div>
        </div>

        <div class="form-row">
          <div class="form-group">
            <label for="funcionario">Funcionário (CPF):</label>
            <input
              type="text"
              id="funcionario"
              placeholder="000.000.000-00"
              required
            />
          </div>
          <div class="form-group">
            <label for="status">Status:</label>
            <select id="status" required>
              <option value="pendente" selected>Pendente</option>
              <option value="concluido">Concluído</option>
              <option value="em_andamento">Em andamento</option>
            </select>
          </div>
        </div>

        <div class="form-row formas-pagamento">
          <div class="form-group">
            <label>Forma de Pagamento:</label>
            <div class="checkbox-group">
              <label>
                <input type="checkbox" name="pagamento" value="dinheiro" />
                Dinheiro
              </label>
              <label>
                <input type="checkbox" name="pagamento" value="pix" /> PIX
              </label>
              <label>
                <input type="checkbox" name="pagamento" value="credito" />
                Crédito
              </label>
              <label>
                <input type="checkbox" name="pagamento" value="debito" /> Débito
              </label>
            </div>
          </div>
        </div>
      </div>

        <div class="section-divider">Dados do Veículo</div>
      <div class="modal-body">
        <div class="form-row">
          <div class="form-group">
            <label for="nome">Nome do Cliente:</label>
            <input
              type="text"
              id="nome"
              placeholder="Insira o nome do Cliente"
              required
            />
          </div>
          <div class="form-group">
            <label for="telefone">Telefone:</label>
            <input
              type="text"
              id="telefone"
              placeholder="(XX) XXXXX-XXXX"
              required
            />
          </div>
        </div>

        <div class="form-row">
          <div class="form-group">
            <label for="dataEntrada">Data de entrada:</label>
            <input
              type="date"
              id="dataEntrada"
              placeholder="DD/MM/AAAA"
              required
            />
          </div>
          <div class="form-group">
            <label for="tipoVeiculo">Tipo do veículo:</label>
            <input
              type="text"
              id="tipoVeiculo"
              placeholder="Categoria do veículo"
              required
            />
          </div>
        </div>

        <div class="form-row">
          <div class="form-group">
            <label for="modelo">Modelo:</label>
            <input
              type="text"
              id="modelo"
              placeholder="Insira o modelo"
              required
            />
          </div>
          <div class="form-group">
            <label for="cor">Cor:</label>
            <input type="text" id="cor" placeholder="Cor" required />
          </div>
          <div class="form-group">
            <label for="ano">Ano:</label>
            <input type="text" id="ano" placeholder="XXXX" required />
          </div>
          <div class="form-group">
            <label for="placa">Placa:</label>
            <input type="text" id="placa" placeholder="XXXX XXXX" required />
          </div>
        </div>
            
          </form>
        </div>
      </div>
    </div>
  </div>
  
  <script>
   
   document.addEventListener("DOMContentLoaded", function() {
       carregarAgendamentos2();
       console.log("aaaaaa");
    });
  
    // Função para carregar os agendamentos no select
    async function carregarAgendamentos2() {
      try {
        const response = await fetch("/servico/listar_agendamentos");
        if (response.ok) {
          const agendamentos = await response.json();
          const selectAgendamento = document.getElementById("agendamentoSelect");
  
          selectAgendamento.innerHTML = '<option value="" disabled selected>Selecione o agendamento</option>';
          agendamentos.forEach(agendamento => {
            const option = document.createElement("option");
            option.value = agendamento.idagendamento;
            option.textContent = agendamento.idplaca;
            selectAgendamento.appendChild(option);
          });
        }
      } catch (error) {
        console.log("Carregando agendamentos...");
      }
    }


  
    // Consulta um agendamento específico
    async function consultarAgendamento() {
      const idAgendamento = document.getElementById("agendamentoSelect").value;
  
      if (!idAgendamento) {
        alert("Por favor, selecione um agendamento.");
        return;
      }
  
      try {
        const response = await fetch(`/servico/agendamentos/${idAgendamento}`);
        if (!response.ok) throw new Error("Agendamento não encontrado.");
  
        const { agendamento, funcionario, veiculo, servico, venda } = await response.json();
        console.log(agendamento);
        // Preenche os campos
        document.getElementById("dataServico").value = formatarData(agendamento.data);
        document.getElementById("horaServico").value = agendamento.hora ;
        document.getElementById("valor").value = `R$ ${parseFloat(agendamento.valor)
            .toFixed(2)
            .replace(".", ",")}`;
        document.getElementById("servico").value = servico.tiposervico;
        document.getElementById("funcionario").value = funcionario.cpf;
        document.getElementById("status").value = agendamento.status;
        // Preenche as formas de pagamento
        const formasPagamento = venda.formapagamento; // Supondo que isso retorne um array como ["dinheiro", "credito"]
        const checkboxes = document.querySelectorAll('input[name="pagamento"]');

        checkboxes.forEach(checkbox => {
            if (formasPagamento.includes(checkbox.value)) {
                checkbox.checked = true;
            } else {
                checkbox.checked = false;
            }
        });

        // document.getElementById("veiculoAgendamento").value = veiculo.idplaca;
        // document.getElementById("responsavelAgendamento").value = agendamento.veiculo?.nomeResponsavel || "Não informado";
  
        // // Preenche a lista de funcionários
        // const funcionariosDiv = document.getElementById("funcionariosAgendamento");
        // funcionariosDiv.innerHTML = funcionarios && funcionarios.length > 0 ? 
        //   funcionarios.map(func => 
        //     `<div class="funcionario-item">${func.nome} (${func.cpf})</div>`
        //   ).join("") : "<div class='funcionario-item'>Nenhum funcionário alocado</div>";
  
        // Mostra resultado e esconde consulta
        document.getElementById("telaConsultaAgendamento").style.display = "none";
        document.getElementById("resultadoConsultaAgendamento").style.display = "block";
      } catch (error) {
        alert(error.message);
      }
    }
  
    // Função para habilitar edição
    function habilitarEdicaoAgendamento() {
      document.getElementById("statusAgendamento").disabled = false;
      document.getElementById("botoesEdicaoAgendamento").style.display = "block";
      document.getElementById("lapisAgendamento").style.visibility = "hidden";
    }
  
    // Função para salvar alterações
    async function salvarAlteracoesAgendamento() {
      const idAgendamento = document.getElementById("agendamentoSelect").value;
      const status = document.getElementById("statusAgendamento").value;
  
      try {
        const response = await fetch(`/agendamentos/atualizar/${idAgendamento}`, {
          method: "PUT",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            status
          }),
        });
  
        if (!response.ok) throw new Error("Erro ao atualizar agendamento.");
  
        alert("Agendamento atualizado com sucesso!");
        cancelarEdicaoAgendamento();
      } catch (error) {
        alert(error.message);
      }
    }
  
    // Função para cancelar edição
    function cancelarEdicaoAgendamento() {
      document.getElementById("statusAgendamento").disabled = true;
      document.getElementById("botoesEdicaoAgendamento").style.display = "none";
      document.getElementById("lapisAgendamento").style.visibility = "visible";
    }
  
    // Função para confirmar exclusão
    function confirmarExclusaoAgendamento() {
      const idAgendamento = document.getElementById("agendamentoSelect").value;
      
      if (!idAgendamento) {
        alert("Nenhum agendamento selecionado para exclusão.");
        return;
      }
  
      if (confirm("Tem certeza que deseja excluir este agendamento?")) {
        excluirAgendamento(idAgendamento);
      }
    }
  
    // Função para excluir agendamento
    async function excluirAgendamento(idAgendamento) {
      try {
        const response = await fetch(`/agendamentos/excluir/${idAgendamento}`, {
          method: "DELETE"
        });
  
        if (!response.ok) throw new Error("Erro ao excluir agendamento.");
  
        alert("Agendamento excluído com sucesso!");
        fecharOuVoltarAgendamento();
      } catch (error) {
        alert(error.message);
      }
    }
  
    // Função auxiliar para formatar data
    function formatarData(dataString) {
      const data = new Date(dataString);
      return data.toLocaleDateString('pt-BR');
    }
  
    // Função para fechar ou voltar
    function fecharOuVoltarAgendamento() {
      const resultado = document.getElementById("resultadoConsultaAgendamento");
      const consulta = document.getElementById("telaConsultaAgendamento");
  
      if (resultado.style.display !== "none") {
        resultado.style.display = "none";
        consulta.style.display = "flex";
        cancelarEdicaoAgendamento();
      } else {
        document.getElementById("modalConsultarAgendamento").style.display = "none";
      }
  
      document.getElementById("consultaFormAgendamento").reset();
      document.getElementById("formConsultarAgendamento").reset();
      document.getElementById("agendamentoSelect").value = "";
    }
  </script>