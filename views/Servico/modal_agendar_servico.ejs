<div id="modalAgendarServico" class="modal">
  <div class="modal-content">
    <div class="modal-header">
      <button class="back-button" onclick="fecharModal('modalAgendarServico')">
        <i class="arrow-left">
          <img src="/assets/Icon (1).png" alt="voltar" />
        </i>
      </button>
      <h2>Agendar Serviço</h2>
      <button class="home-button" onclick="window.location.href='/home'">
        <i class="home-icon">
          <img src="/assets/home-lg-alt 1.png" alt="home" />
        </i>
      </button>
    </div>

    <div class="section-divider">Dados do Serviço</div>

    <div class="modal-body">
      <form id="formAgendarServico">
        <div class="form-row">
          <div class="form-group">
            <label for="dataServico">Data do serviço:</label>
            <input
              type="date"
              id="dataServico"
              placeholder="DD/MM/AAAA"
              required
            />
          </div>
          <div class="form-group">
            <label for="horaServico">Hora:</label>
            <input type="time" id="horaServico" placeholder="HH:MM" required />
          </div>
        </div>

        <div class="form-row">
          <div class="form-group">
            <label for="valor">Valor Total:</label>
            <input type="text" id="valor" placeholder="R$ 00,00" required />
          </div>
          <div class="form-group">
            <label for="servico">Serviço:</label>
            <select id="servico" required>
              <option value="" selected disabled>Selecione o serviço</option>
            </select>
          </div>
        </div>

        <div class="form-row">
          <div class="form-group">
            <label for="funcionario">Funcionário (CPF):</label>
            <input
              type="text"
              id="funcionario"
              placeholder="000.000.000-00"
              required
            />
          </div>
          <div class="form-group">
            <label for="status">Status:</label>
            <select id="status" required>
              <option value="pendente" selected>Pendente</option>
              <option value="concluido">Concluído</option>
              <option value="em_andamento">Em andamento</option>
            </select>
          </div>
        </div>

        <div class="form-row formas-pagamento">
          <div class="form-group">
            <label>Forma de Pagamento:</label>
            <div class="checkbox-group">
              <label>
                <input type="checkbox" name="pagamento" value="dinheiro" />
                Dinheiro
              </label>
              <label>
                <input type="checkbox" name="pagamento" value="pix" /> PIX
              </label>
              <label>
                <input type="checkbox" name="pagamento" value="credito" />
                Crédito
              </label>
              <label>
                <input type="checkbox" name="pagamento" value="debito" /> Débito
              </label>
            </div>
          </div>
        </div>
      </div>

        <div class="section-divider">Dados do Veículo</div>
      <div class="modal-body">
        <div class="form-row">
          <div class="form-group">
            <label for="nome">Nome do Cliente:</label>
            <input
              type="text"
              id="nome"
              placeholder="Insira o nome do Cliente"
              required
            />
          </div>
          <div class="form-group">
            <label for="telefone">Telefone:</label>
            <input
              type="text"
              id="telefone"
              placeholder="(XX) XXXXX-XXXX"
              required
            />
          </div>
        </div>

        <div class="form-row">
          <div class="form-group">
            <label for="dataEntrada">Data de entrada:</label>
            <input
              type="date"
              id="dataEntrada"
              placeholder="DD/MM/AAAA"
              required
            />
          </div>
          <div class="form-group">
            <label for="tipoVeiculo">Tipo do veículo:</label>
            <input
              type="text"
              id="tipoVeiculo"
              placeholder="Categoria do veículo"
              required
            />
          </div>
        </div>

        <div class="form-row">
          <div class="form-group">
            <label for="modelo">Modelo:</label>
            <input
              type="text"
              id="modelo"
              placeholder="Insira o modelo"
              required
            />
          </div>
          <div class="form-group">
            <label for="cor">Cor:</label>
            <input type="text" id="cor" placeholder="Cor" required />
          </div>
          <div class="form-group">
            <label for="ano">Ano:</label>
            <input type="text" id="ano" placeholder="XXXX" required />
          </div>
          <div class="form-group">
            <label for="placa">Placa:</label>
            <input type="text" id="placa" placeholder="XXXX XXXX" required />
          </div>
        </div>

        <div class="form-row">
          <button type="submit" class="agendar-btn">Agendar</button>
        </div>
      </form>
    </div>
  </div>
</div>
<script>
  // Carregar lista de serviços
  async function carregarServicos() {
    try {
      const response = await fetch("/servico/listar");
      if (!response.ok) {
        throw new Error("Erro ao carregar serviços:", error);
      }
      const servicos = await response.json();

      const selectServico = document.getElementById("servico");

      // Limpa as opções existentes (exceto a padrão)
      selectServico.innerHTML =
        '<option value="" disabled selected>Selecione o serviço</option>';

      servicos.forEach((servico) => {
      const option = document.createElement("option");
      option.value = servico.idservico;
      option.textContent = servico.tiposervico;
      option.setAttribute('valorservico', servico.valor);
      selectServico.appendChild(option);
    });
    } catch (error) {
      console.error(error);
    }
  }

  //Apresenta o valor do serviço selecionado
  document.
  getElementById("servico").addEventListener("change", function (event) {
  const selectServico = event.target;
  const valorServico = selectServico.options[selectServico.selectedIndex].getAttribute('valorservico');

  // Atualizar o campo de valor total
  const campoValor = document.getElementById("valor");
  campoValor.value = `R$ ${parseFloat(valorServico).toFixed(2).replace(".", ",")}`;
  });

  // Máscara para CPF
  document
    .getElementById("funcionario")
    .addEventListener("input", async function (event) {
      let cpf = event.target.value;
      cpf = cpf.replace(/\D/g, "");

      if (cpf.length > 11) {
        cpf = cpf.substring(0, 11);
      }

      if (cpf.length > 9) {
        cpf = cpf.replace(/(\d{3})(\d{3})(\d{3})(\d{2})/, "$1.$2.$3-$4");
      } else if (cpf.length > 6) {
        cpf = cpf.replace(/(\d{3})(\d{3})(\d{3})/, "$1.$2.$3");
      } else if (cpf.length > 3) {
        cpf = cpf.replace(/(\d{3})(\d{3})/, "$1.$2");
      }

      event.target.value = cpf;
    });

  // Máscara para o valor total
  document.getElementById("valor").addEventListener("input", function (event) {
    let valor = event.target.value;
    valor = valor.replace(/\D/g, "");
    valor = (parseInt(valor || "0") / 100).toFixed(2);
    valor = "R$ " + valor.replace(".", ",");

    event.target.value = valor;
  });

  // Chamar função ao carregar a página
  document.addEventListener("DOMContentLoaded", carregarServicos);

  // Envio do formulário
  document
    .getElementById("formAgendarServico")
    .addEventListener("submit", async function (event) {
      event.preventDefault();

      const dataServico = document.getElementById("dataServico").value;
      const hora = document.getElementById("horaServico").value;
      const valor = parseFloat(
        document
          .getElementById("valor")
          .value.replace("R$", "")
          .replace(",", ".")
      );
      const idservico = document.getElementById("servico").value;
      const cpfFuncionario = document.getElementById("funcionario").value;
      const status = document.getElementById("status").value;

      let formaPagamento = "";
      document.getElementsByName("pagamento").forEach((opcao) => {
        if (opcao.checked) formaPagamento = opcao.value;
      });

      const nome = document.getElementById("nome").value;
      const telefone = document.getElementById("telefone").value;
      const dataEntrada = document.getElementById("dataEntrada").value;
      const tipoveiculo = document.getElementById("tipoVeiculo").value;
      const ano = document.getElementById("ano").value;
      const placa = document.getElementById("placa").value;
      const cor = document.getElementById("cor").value;
      const modelo = document.getElementById("modelo").value;

      try {
        const response = await fetch("/servico/agendarservico", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({
            dataServico,
            hora,
            valor,
            idservico,
            cpfFuncionario,
            status,
            formaPagamento,
            nome,
            telefone,
            dataEntrada,
            tipoveiculo,
            ano,
            placa,
            cor,
            modelo,
          }),
        });

        const data = await response.json();

        if (!response.ok) {
          throw new Error(data.message || "Erro ao agendar serviço.");
        }

        alert("✅ Serviço Agendado com sucesso!");
        fecharModal("modalAgendarServico");
        document.getElementById("formAgendarServico").reset();
      } catch (error) {
        alert(`❌ ${error.message}`);
      }
    });

  // Função para fechar o modal
  function fecharModal2(idModal) {
    const formResultado = document.getElementById("formAgendarServico");
    // Fecha o modal e reseta tudo
    formResultado.reset();

    // Resetando o select manualmente
    document.getElementById("servico").value = "";
    document.getElementById(idModal).style.display = "none";
  }
</script>
